# Enable parsing of Qt-specific keywords
--langmap=C++:.cpp.h.hpp.hxx

# Detect Q_OBJECT macro (used for meta-object system)
--regex-C++=/^[ \t]*Q_OBJECT$/Q_OBJECT/o,qt

# Detect signal and slot declarations
--regex-C++=/^[ \t]*signals:[ \t]*$/signals/s,qt
--regex-C++=/^[ \t]*slots:[ \t]*$/slots/s,qt
--regex-C++=/^[ \t]*public[ \t]+slots:[ \t]*$/public_slot/s,qt
--regex-C++=/^[ \t]*private[ \t]+slots:[ \t]*$/private_slot/s,qt
--regex-C++=/^[ \t]*protected[ \t]+slots:[ \t]*$/protected_slot/s,qt

# Detect Qt property macros
--regex-C++=/^[ \t]*Q_PROPERTY[ \t]+\(([A-Za-z0-9_]+)/\1/P,qt_property/
--regex-C++=/^[ \t]*Q_SIGNAL[ \t]+\(([A-Za-z0-9_]+)/\1/Q_SIGNAL/
--regex-C++=/^[ \t]*Q_SLOT[ \t]+\(([A-Za-z0-9_]+)/\1/Q_SLOT/
--regex-C++=/^[ \t]*Q_INVOKABLE[ \t]+\(([A-Za-z0-9_]+)/\1/Q_INVOKABLE/

# Detect Qt-specific methods
--regex-C++=/^[ \t]*virtual[ \t]+void[ \t]+(event|mousePressEvent|mouseReleaseEvent|mouseMoveEvent|keyPressEvent|keyReleaseEvent)[ \t]*\(/\\1/method,qt/
--regex-C++=/^[ \t]*(paintEvent|resizeEvent|focusInEvent|focusOutEvent|wheelEvent)[ \t]*\(/\\1/method,qt/

# Detect QObject-based class names (public QObject)
--regex-C++=/^[ \t]*class[ \t]+([A-Za-z0-9_]+)[ \t]*:[ \t]*public[ \t]+QObject/\1/qobject_class/

# Detect QObject-based class names with multiple inheritance
--regex-C++=/^[ \t]*class[ \t]+([A-Za-z0-9_]+)[ \t]*:[ \t]*public[ \t]+([A-Za-z0-9_]+),[ \t]*public[ \t]+QObject/\1/qobject_class/

# Detect Qt UI Class Definitions (e.g., MainWindow : QMainWindow)
--regex-C++=/^[ \t]*class[ \t]+([A-Za-z0-9_]+)[ \t]*:[ \t]*public[ \t]+Q[A-Za-z0-9_]+/\1/qt_class/

# Detect connect() signal-slot connection
--regex-C++=/connect\(\s*([A-Za-z0-9_]+),\s*&?\s*([A-Za-z0-9_]+)::([A-Za-z0-9_]+),\s*&?\s*([A-Za-z0-9_]+)::([A-Za-z0-9_]+)/\2::\3 â†’ \4::\5/connect/
